# Generated by Django 4.2 on 2025-09-25 06:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('docx_editor', '0004_documentimage_paragraph_has_images_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Model name/identifier', max_length=100)),
                ('version', models.CharField(help_text='Model version (e.g., v1.0, v1.1)', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Model description and changes')),
                ('model_path', models.CharField(help_text='Path to model file', max_length=500)),
                ('config_data', models.JSONField(default=dict, help_text='Model configuration and hyperparameters')),
                ('accuracy', models.FloatField(blank=True, help_text='Overall accuracy on test set', null=True)),
                ('precision', models.FloatField(blank=True, help_text='Precision score', null=True)),
                ('recall', models.FloatField(blank=True, help_text='Recall score', null=True)),
                ('f1_score', models.FloatField(blank=True, help_text='F1 score', null=True)),
                ('training_data_size', models.IntegerField(blank=True, help_text='Number of training samples', null=True)),
                ('model_type', models.CharField(choices=[('bert', 'BERT-based Transformer'), ('roberta', 'RoBERTa-based Transformer'), ('similarity', 'Similarity-based Model'), ('ensemble', 'Ensemble Model'), ('custom', 'Custom Architecture')], default='custom', max_length=50)),
                ('is_active', models.BooleanField(default=False, help_text='Currently deployed model')),
                ('is_production_ready', models.BooleanField(default=False, help_text='Ready for production use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='EditComplianceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_text', models.TextField(help_text='Original paragraph text before edit')),
                ('edited_text', models.TextField(help_text='Final paragraph text after edit')),
                ('comment_text', models.TextField(help_text='Comment/suggestion text')),
                ('compliance_score', models.FloatField(blank=True, help_text='Compliance score 0.0-1.0 (0=non-compliant, 1=fully compliant)', null=True)),
                ('compliance_label', models.CharField(blank=True, choices=[('compliant', 'Compliant'), ('partial', 'Partially Compliant'), ('non_compliant', 'Non-Compliant'), ('needs_review', 'Needs Manual Review')], max_length=20, null=True)),
                ('edit_type', models.CharField(blank=True, choices=[('grammar', 'Grammar/Spelling'), ('content', 'Content Changes'), ('style', 'Style/Tone'), ('structure', 'Structure/Organization'), ('formatting', 'Formatting'), ('mixed', 'Mixed Changes')], max_length=20, null=True)),
                ('manually_reviewed', models.BooleanField(default=False)),
                ('reviewer_notes', models.TextField(blank=True, help_text='Manual reviewer feedback')),
                ('confidence_score', models.FloatField(blank=True, help_text='Model confidence 0.0-1.0', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_data', to='docx_editor.comment')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_data', to='docx_editor.document')),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_data', to='docx_editor.paragraph')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceCheckResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_text', models.TextField()),
                ('edited_text', models.TextField()),
                ('comment_text', models.TextField()),
                ('predicted_score', models.FloatField(help_text='Predicted compliance score 0.0-1.0')),
                ('predicted_label', models.CharField(help_text='Predicted compliance label', max_length=20)),
                ('confidence_score', models.FloatField(help_text='Model confidence in prediction')),
                ('explanation_data', models.JSONField(default=dict, help_text='Model explanation/reasoning (attention weights, key features, etc.)')),
                ('user_feedback', models.CharField(choices=[('correct', 'Prediction was correct'), ('incorrect', 'Prediction was incorrect'), ('partially_correct', 'Prediction was partially correct'), ('no_feedback', 'No user feedback provided')], default='no_feedback', max_length=20)),
                ('user_notes', models.TextField(blank=True, help_text='User feedback notes')),
                ('processing_time_ms', models.IntegerField(blank=True, help_text='Model inference time in milliseconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_results', to='docx_editor.document')),
                ('model_used', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='docx_editor.mlmodel')),
                ('paragraph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_results', to='docx_editor.paragraph')),
            ],
        ),
        migrations.AddIndex(
            model_name='editcompliancedata',
            index=models.Index(fields=['compliance_label', 'created_at'], name='docx_editor_complia_3572d3_idx'),
        ),
        migrations.AddIndex(
            model_name='editcompliancedata',
            index=models.Index(fields=['edit_type', 'compliance_score'], name='docx_editor_edit_ty_584d42_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='editcompliancedata',
            unique_together={('paragraph', 'comment')},
        ),
        migrations.AddIndex(
            model_name='compliancecheckresult',
            index=models.Index(fields=['created_at', 'predicted_label'], name='docx_editor_created_20b784_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancecheckresult',
            index=models.Index(fields=['model_used', 'user_feedback'], name='docx_editor_model_u_470775_idx'),
        ),
    ]
